@inherits LayoutComponentBase

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        @* Modal Section *@
        @if (IsModalVisible)
        {
            <div class="modal-overlay">
                <div class="modal-content">
                    @if (!string.IsNullOrEmpty(ModalTitle))
                    {
                        <h3>@ModalTitle</h3>
                    }
                    <p>@ModalDescription</p>
                    <button @onclick="CloseModal">@OkayButtonText</button>
                </div>
            </div>
        }

        @* Page Content *@
        <CascadingValue Value="this">
            <article class="content px-4">
                @Body
            </article>
        </CascadingValue>
    </main>
</div>

<style>
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999; /* Ensures it's on top */
    }

    .modal-content {
        background: white;
        padding: 20px;
        border-radius: 8px;
        width: 300px;
        text-align: center;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    }

        .modal-content button {
            margin-top: 10px;
            padding: 8px 16px;
            border: none;
            background: #007bff;
            color: white;
            cursor: pointer;
            border-radius: 4px;
        }

            .modal-content button:hover {
                background: #0056b3;
            }

</style>

@code {
    private bool IsModalVisible;
    private string ModalTitle;
    private string ModalDescription;
    private string OkayButtonText = "OK";

    public void ShowModal(string title, string description, string buttonText = "OK")
    {
        Console.WriteLine("Modal triggered!"); // Debugging
        ModalTitle = title;
        ModalDescription = description;
        OkayButtonText = buttonText;
        IsModalVisible = true;
        InvokeAsync(StateHasChanged); // Ensures UI updates
    }

    private void CloseModal()
    {
        IsModalVisible = false;
        StateHasChanged(); // Ensure UI updates
    }
}
